{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Selamat Datang Di Halaman Web M Zainuddin A \u00b6 Profil Singkat \u00b6 Nama : M Zainuddin U NIM : 180411100104 Kelas : Komputasi Numerik 4A Dosen Pengampuh : Mulaab, S.Si, M.Kom Program Studi : Teknik Informatika","title":"Menu"},{"location":"#selamat-datang-di-halaman-web-m-zainuddin-a","text":"","title":"Selamat Datang Di Halaman Web M Zainuddin A"},{"location":"#profil-singkat","text":"Nama : M Zainuddin U NIM : 180411100104 Kelas : Komputasi Numerik 4A Dosen Pengampuh : Mulaab, S.Si, M.Kom Program Studi : Teknik Informatika","title":"Profil Singkat"},{"location":"tugas1/","text":"Deret MacLaurin \u00b6 DERET MacLaurin adalah Suatu fungsi f(x) yang memiliki turunan f'(x), f''(x), f'''(x) dan seterusnya yang kontinyu dalam interval I dengan a, x I maka untuk x disekitar a yaitu |x-a|<*R , *f(x) dapat diekspansi kedalam Deret Taylor. Dalam kasus khusus jika a=0 , maka disebut Deret MacLaurin atau sering disebut Deret Taylor baku. Dan didefinisikan sebagai berikut Definisi : f(x)=f(0)+f\u2019(0)x \\displaystyle+\\frac{{{f}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{2}!}}{x}^{2} \\displaystyle+\\frac{{{f}\\text{'}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{3}!}}{x}^{3} \\displaystyle+\\ldots \\displaystyle+\\frac{{{{f}^{{\\text{n}}}{\\left({0}\\right)}}}}{{{n}!}}{x}^{n} f(x)=f(0)+f\u2019(0)x \\displaystyle+\\frac{{{f}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{2}!}}{x}^{2} \\displaystyle+\\frac{{{f}\\text{'}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{3}!}}{x}^{3} \\displaystyle+\\ldots \\displaystyle+\\frac{{{{f}^{{\\text{n}}}{\\left({0}\\right)}}}}{{{n}!}}{x}^{n} Atau bisa dinyatakan dengan: f(x)=\\sum_{n=0}^\\infty \\frac{f^{(n)}n(0)}{n!}x^{n} f(x)=\\sum_{n=0}^\\infty \\frac{f^{(n)}n(0)}{n!}x^{n} Deret MacLaurin ini sangat bermanfaat dalam metode numerik untuk menghitung atau menghampiri nilai-nilai fungsi yang susah dihitung secara manual seperti nilai , , , atau . Tentu kita tidak akan bisa menghitung nilai-nilai fungsi tersebut tanpa menggunakan bantuan kalkulator atau tabel. Dalam tulisan ini saya akan mencoba untuk mendekati fungsi-fungsi tersebut menggunakan Deret MacLaurin. Tugas \u00b6 Hitunglah e^2x untuk nilai x=4, kemudian expensikan hingga selisih yang dihasilkan kurang dari nilai error yang ditentukan yaitu e < 0,001. Penyelesaian \u00b6 Fungsi awal exponen : f(x) = e^{2x}\\ f(x) = e^{2x}\\ Dapat juga didefinisikan dengan rumus : e^{2x} = \\sum_{n=0}^\\infty \\frac{(2x)^n}{n!} = \\sum_{n=0}^\\infty (2)^n\\frac{x^n}{n!} e^{2x} = \\sum_{n=0}^\\infty \\frac{(2x)^n}{n!} = \\sum_{n=0}^\\infty (2)^n\\frac{x^n}{n!} Tabel perhitungan untuk turunan exponensial : \\begin{array}{|c|c|l|} \\hline f(x) & e^{2 x} & f(0)=1 \\\\ \\hline f^{\\prime}(x) & 2 e^{2 x} & f^{\\prime}(0)=2 \\\\ \\hline f^{\\prime \\prime}(x) & 4 e^{2 x} & f^{\\prime \\prime}(0)=4 \\\\ \\hline f^{\\prime \\prime \\prime}(x) & 8 e^{2 x} & f^{\\prime \\prime \\prime}(0)=8 \\\\ \\hline f^{\\prime \\prime \\prime \\prime}(x) & 16 e^{2 x} & f^{\\prime \\prime \\prime \\prime}(0)=16 \\\\ \\hline \\end{array} \\begin{array}{|c|c|l|} \\hline f(x) & e^{2 x} & f(0)=1 \\\\ \\hline f^{\\prime}(x) & 2 e^{2 x} & f^{\\prime}(0)=2 \\\\ \\hline f^{\\prime \\prime}(x) & 4 e^{2 x} & f^{\\prime \\prime}(0)=4 \\\\ \\hline f^{\\prime \\prime \\prime}(x) & 8 e^{2 x} & f^{\\prime \\prime \\prime}(0)=8 \\\\ \\hline f^{\\prime \\prime \\prime \\prime}(x) & 16 e^{2 x} & f^{\\prime \\prime \\prime \\prime}(0)=16 \\\\ \\hline \\end{array} Berikut cara mencari nilai expansi : f(x)=f(0)+\\frac{f^{\\prime}(0)}{1 !} x+\\frac{f^{\\prime \\prime}(0)}{2 !} x^{2}+\\frac{f^{\\prime \\prime \\prime}(0)}{3 !} x^{3}+\\frac{f^{\\prime \\prime \\prime \\prime}(0)}{4 !} x^{4} + ... f(x)=f(0)+\\frac{f^{\\prime}(0)}{1 !} x+\\frac{f^{\\prime \\prime}(0)}{2 !} x^{2}+\\frac{f^{\\prime \\prime \\prime}(0)}{3 !} x^{3}+\\frac{f^{\\prime \\prime \\prime \\prime}(0)}{4 !} x^{4} + ... nilai turunan pada tabel (dengan X=0) dimasukkan kedalam rumus sehingga didapatkan seperti ini : $$ f(x)=1+\\frac{2}{1 !} x+\\frac{4}{2 !} x^{2}+\\frac{8}{3 !} x^{3}+\\frac{16}{4 !} x^{4} + ... $$ kemudian, nilai x diganti dengan 4 : $$ f(x)=1+\\frac{2}{1 !} 4+\\frac{4}{2 !} 4^{2}+\\frac{8}{3 !} 4^{3}+\\frac{16}{4 !} 4^{4} + ... $$ Perhitungan tersebut akan terus belanjut hingga nilai selisih mendekati nilai error yang ditentukan yaitu kurang dari 0,001 Listing Program \u00b6 Script import math error = 0.001 def f ( x ): f_turunan = 1 current = i = 0 iteration = True while iteration : old = current current += ( f_turunan * ( x ** i )) / math . factorial ( i ) print ( 'f ke-' , i , '=' , 'Ea=' , current - old ) if current - old < error : iteration = False else : f_turunan *= 2 i += 1 f ( 4 ) Output f ke - 0 = Ea = 1.0 f ke - 1 = Ea = 8.0 f ke - 2 = Ea = 32.0 f ke - 3 = Ea = 85.33333333333333 f ke - 4 = Ea = 170.66666666666669 f ke - 5 = Ea = 273.0666666666666 f ke - 6 = Ea = 364.08888888888896 f ke - 7 = Ea = 416.1015873015872 f ke - 8 = Ea = 416.1015873015872 f ke - 9 = Ea = 369.8680776014112 f ke - 10 = Ea = 295.89446208112895 f ke - 11 = Ea = 215.195972422639 f ke - 12 = Ea = 143.46398161509296 f ke - 13 = Ea = 88.28552714774924 f ke - 14 = Ea = 50.448872655856576 f ke - 15 = Ea = 26.90606541645684 f ke - 16 = Ea = 13.45303270822842 f ke - 17 = Ea = 6.330838921519444 f ke - 18 = Ea = 2.8137061873417224 f ke - 19 = Ea = 1.184718394670199 f ke - 20 = Ea = 0.47388735786807956 f ke - 21 = Ea = 0.18052851728316455 f ke - 22 = Ea = 0.06564673355751438 f ke - 23 = Ea = 0.022833646454728296 f ke - 24 = Ea = 0.0076112154847578495 f ke - 25 = Ea = 0.0024355889549951826 f ke - 26 = Ea = 0.0007494119863622473 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$'],['$','$']]} });","title":"Tugas 1"},{"location":"tugas1/#deret-maclaurin","text":"DERET MacLaurin adalah Suatu fungsi f(x) yang memiliki turunan f'(x), f''(x), f'''(x) dan seterusnya yang kontinyu dalam interval I dengan a, x I maka untuk x disekitar a yaitu |x-a|<*R , *f(x) dapat diekspansi kedalam Deret Taylor. Dalam kasus khusus jika a=0 , maka disebut Deret MacLaurin atau sering disebut Deret Taylor baku. Dan didefinisikan sebagai berikut Definisi : f(x)=f(0)+f\u2019(0)x \\displaystyle+\\frac{{{f}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{2}!}}{x}^{2} \\displaystyle+\\frac{{{f}\\text{'}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{3}!}}{x}^{3} \\displaystyle+\\ldots \\displaystyle+\\frac{{{{f}^{{\\text{n}}}{\\left({0}\\right)}}}}{{{n}!}}{x}^{n} f(x)=f(0)+f\u2019(0)x \\displaystyle+\\frac{{{f}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{2}!}}{x}^{2} \\displaystyle+\\frac{{{f}\\text{'}\\text{'}\\text{'}{\\left({0}\\right)}}}{{{3}!}}{x}^{3} \\displaystyle+\\ldots \\displaystyle+\\frac{{{{f}^{{\\text{n}}}{\\left({0}\\right)}}}}{{{n}!}}{x}^{n} Atau bisa dinyatakan dengan: f(x)=\\sum_{n=0}^\\infty \\frac{f^{(n)}n(0)}{n!}x^{n} f(x)=\\sum_{n=0}^\\infty \\frac{f^{(n)}n(0)}{n!}x^{n} Deret MacLaurin ini sangat bermanfaat dalam metode numerik untuk menghitung atau menghampiri nilai-nilai fungsi yang susah dihitung secara manual seperti nilai , , , atau . Tentu kita tidak akan bisa menghitung nilai-nilai fungsi tersebut tanpa menggunakan bantuan kalkulator atau tabel. Dalam tulisan ini saya akan mencoba untuk mendekati fungsi-fungsi tersebut menggunakan Deret MacLaurin.","title":"Deret MacLaurin"},{"location":"tugas1/#tugas","text":"Hitunglah e^2x untuk nilai x=4, kemudian expensikan hingga selisih yang dihasilkan kurang dari nilai error yang ditentukan yaitu e < 0,001.","title":"Tugas"},{"location":"tugas1/#penyelesaian","text":"Fungsi awal exponen : f(x) = e^{2x}\\ f(x) = e^{2x}\\ Dapat juga didefinisikan dengan rumus : e^{2x} = \\sum_{n=0}^\\infty \\frac{(2x)^n}{n!} = \\sum_{n=0}^\\infty (2)^n\\frac{x^n}{n!} e^{2x} = \\sum_{n=0}^\\infty \\frac{(2x)^n}{n!} = \\sum_{n=0}^\\infty (2)^n\\frac{x^n}{n!} Tabel perhitungan untuk turunan exponensial : \\begin{array}{|c|c|l|} \\hline f(x) & e^{2 x} & f(0)=1 \\\\ \\hline f^{\\prime}(x) & 2 e^{2 x} & f^{\\prime}(0)=2 \\\\ \\hline f^{\\prime \\prime}(x) & 4 e^{2 x} & f^{\\prime \\prime}(0)=4 \\\\ \\hline f^{\\prime \\prime \\prime}(x) & 8 e^{2 x} & f^{\\prime \\prime \\prime}(0)=8 \\\\ \\hline f^{\\prime \\prime \\prime \\prime}(x) & 16 e^{2 x} & f^{\\prime \\prime \\prime \\prime}(0)=16 \\\\ \\hline \\end{array} \\begin{array}{|c|c|l|} \\hline f(x) & e^{2 x} & f(0)=1 \\\\ \\hline f^{\\prime}(x) & 2 e^{2 x} & f^{\\prime}(0)=2 \\\\ \\hline f^{\\prime \\prime}(x) & 4 e^{2 x} & f^{\\prime \\prime}(0)=4 \\\\ \\hline f^{\\prime \\prime \\prime}(x) & 8 e^{2 x} & f^{\\prime \\prime \\prime}(0)=8 \\\\ \\hline f^{\\prime \\prime \\prime \\prime}(x) & 16 e^{2 x} & f^{\\prime \\prime \\prime \\prime}(0)=16 \\\\ \\hline \\end{array} Berikut cara mencari nilai expansi : f(x)=f(0)+\\frac{f^{\\prime}(0)}{1 !} x+\\frac{f^{\\prime \\prime}(0)}{2 !} x^{2}+\\frac{f^{\\prime \\prime \\prime}(0)}{3 !} x^{3}+\\frac{f^{\\prime \\prime \\prime \\prime}(0)}{4 !} x^{4} + ... f(x)=f(0)+\\frac{f^{\\prime}(0)}{1 !} x+\\frac{f^{\\prime \\prime}(0)}{2 !} x^{2}+\\frac{f^{\\prime \\prime \\prime}(0)}{3 !} x^{3}+\\frac{f^{\\prime \\prime \\prime \\prime}(0)}{4 !} x^{4} + ... nilai turunan pada tabel (dengan X=0) dimasukkan kedalam rumus sehingga didapatkan seperti ini : $$ f(x)=1+\\frac{2}{1 !} x+\\frac{4}{2 !} x^{2}+\\frac{8}{3 !} x^{3}+\\frac{16}{4 !} x^{4} + ... $$ kemudian, nilai x diganti dengan 4 : $$ f(x)=1+\\frac{2}{1 !} 4+\\frac{4}{2 !} 4^{2}+\\frac{8}{3 !} 4^{3}+\\frac{16}{4 !} 4^{4} + ... $$ Perhitungan tersebut akan terus belanjut hingga nilai selisih mendekati nilai error yang ditentukan yaitu kurang dari 0,001","title":"Penyelesaian"},{"location":"tugas1/#listing-program","text":"Script import math error = 0.001 def f ( x ): f_turunan = 1 current = i = 0 iteration = True while iteration : old = current current += ( f_turunan * ( x ** i )) / math . factorial ( i ) print ( 'f ke-' , i , '=' , 'Ea=' , current - old ) if current - old < error : iteration = False else : f_turunan *= 2 i += 1 f ( 4 ) Output f ke - 0 = Ea = 1.0 f ke - 1 = Ea = 8.0 f ke - 2 = Ea = 32.0 f ke - 3 = Ea = 85.33333333333333 f ke - 4 = Ea = 170.66666666666669 f ke - 5 = Ea = 273.0666666666666 f ke - 6 = Ea = 364.08888888888896 f ke - 7 = Ea = 416.1015873015872 f ke - 8 = Ea = 416.1015873015872 f ke - 9 = Ea = 369.8680776014112 f ke - 10 = Ea = 295.89446208112895 f ke - 11 = Ea = 215.195972422639 f ke - 12 = Ea = 143.46398161509296 f ke - 13 = Ea = 88.28552714774924 f ke - 14 = Ea = 50.448872655856576 f ke - 15 = Ea = 26.90606541645684 f ke - 16 = Ea = 13.45303270822842 f ke - 17 = Ea = 6.330838921519444 f ke - 18 = Ea = 2.8137061873417224 f ke - 19 = Ea = 1.184718394670199 f ke - 20 = Ea = 0.47388735786807956 f ke - 21 = Ea = 0.18052851728316455 f ke - 22 = Ea = 0.06564673355751438 f ke - 23 = Ea = 0.022833646454728296 f ke - 24 = Ea = 0.0076112154847578495 f ke - 25 = Ea = 0.0024355889549951826 f ke - 26 = Ea = 0.0007494119863622473 MathJax.Hub.Config({ tex2jax: {inlineMath: [['$$','$$'],['$','$']]} });","title":"Listing Program"},{"location":"tugas2/","text":"Program Newton Raphson pada Fungsi Non Linear \u00b6 Newton Raphson \u00b6 Metode Newton-Raphson adalah metode pencarian akar suatu fungsi f(x) f(x) dengan pendekatan satu titik, dimana fungsi f(x) f(x) mempunyai turunan. Metode ini menggunakan pendekatan satu titik sebagai titik awal. Semakin dekat titik awal yang kita pilih dengan akar sebenarnya, maka semakin cepat konvergen ke akarnya. Diketahui fungsi f(x) f(x) dan turunannya \u0192'(x) \u0192'(x) , kita memulai dengan menentukan titik awal (x_0) (x_0) . x_1 = x_0 - \\frac{f(x_0)}{f'(x_0)} , x_2 = x_1 - \\frac{f(x_1)}{f'(x_1)}, ... , x_n = x_{n-1} - \\frac{f(x_{n-1})}{f'(x_{n-1})} x_1 = x_0 - \\frac{f(x_0)}{f'(x_0)} , x_2 = x_1 - \\frac{f(x_1)}{f'(x_1)}, ... , x_n = x_{n-1} - \\frac{f(x_{n-1})}{f'(x_{n-1})} Menyusun Algoritma dan Pemrograman Newton Rhapson \u00b6 dari rumus yang kita dapat diatas kita dapat menyusun sebuah algoritma yang nantinya akan dibuat menjadi sebuah program. Algoritma menyusun akar - akar f(x) = 0 f(x) = 0 sebagai berikut : Didefinisikan fungsi f f dengan f(x) f(x) dan f'(x) f'(x) Ditentukan Epsilon sebagai Toleransi kesalahan serta iterasi maksimum untuk Stopping Condition Dipilih tebakan awal x_0 x_0 Dihitung f( x_0 x_0 ) dan f'( x_0 x_0 ) Dihitung x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 . jika f'(x_0) = 0 f'(x_0) = 0 kembali ke langkah - 3 Jika \\left | x_b - x_0 \\right | < \\varepsilon \\left | x_b - x_0 \\right | < \\varepsilon . itersasi lebih dari iterasi maksimum tulis x_{hampiran} = x_b x_{hampiran} = x_b sebagai hasil hampiran akar; jika tidak, lanjutkan ke langkah berikutnya. Ganti nilai x_0 x_0 dengan x_0 = x_b x_0 = x_b dan kembali ke langkah-4 Implementasi Pemrograman \u00b6 dari algoritma diatas , kita dapat menyusun sebuah program seperti berikut. import math e = 2.71828 def fungsi ( x ): x = float (( e ** x ) - ( 5 * x * x )) return x def fungsiturunan ( x ): x = float (( e ** x ) - ( 10 * x )) return x x = float ( input ( 'Masukkan nilai awal = ' )) error = float ( input ( 'Masukkan nilai error = ' )) perulangan = int ( input ( 'Masukkan maksimal pengulangan = ' )) iterasi = 0 selisih = error + 1 while iterasi <= perulangan and selisih > error : iterasi += 1 f_2 = x - ( fungsi ( x ) / fungsiturunan ( x )) selisih = math . fabs ( f_2 - x ) x = f_2 print ( \"Iterasi ke = \" , iterasi , \", x = \" , f_2 , \", f(\" , f_2 , \") = \" , fungsi ( f_2 ), \", selisih = \" , error ) if iterasi <= perulangan : print ( \"Perulangan Mencapai Batas Maksimal dengan hasil = \" , f_2 ) else : print ( \"Toleransi tidak terpenuhi\" ) Dengan Output sebagai berikut : Masukkan nilai awal = 1 Masukkan nilai error = 0.001 Masukkan maksimal pengulangan = 20 Iterasi ke = 1 , x = 0.6866509560927913 , f ( 0.6866509560927913 ) = - 0.3703989345253078 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.6866509560927913 Iterasi ke = 2 , x = 0.6107411479509417 , f ( 0.6107411479509417 ) = - 0.023228569301191326 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.6107411479509417 Iterasi ke = 3 , x = 0.605295611440254 , f ( 0.605295611440254 ) = - 0.00012100395601533087 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.605295611440254 Iterasi ke = 4 , x = 0.6052669454187432 , f ( 0.6052669454187432 ) = - 3.32076122155911e-09 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.6052669454187432 >>> Penjelasan : karena kita menggunakan contoh fungsi f(x) = e^x - 5x^2 f(x) = e^x - 5x^2 maka kita membuat sebuah fungsi yang sesuai , dan juga fungsi turunannya yaitu f'(x) = e^x - 10x f'(x) = e^x - 10x Membuat inputan untuk X , Error / Epsilon , serta Maksimal perulangan untuk stopping condition iterasi = 0 pada awal perulangan dan akan bertambah setiap kali melakukan perulangan. x_b - x_0 x_b - x_0 untuk perbandingan lakukan perulangan dengan kondisi iterasi kurang dari sama dengan inputan maksimal iterasi dan selisih lebih dari error / epsilon hitung x_b x_b dengan rumus x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 lalu lakukan perbandingan jika mencapai nilai True maka toleransi tidak terpenuhi namun perulangan sudah mencapai batas jika pengecekan selisih > error bernilai True maka toleransi akan terpenuhi dengan nilai error serta fungsi x pada iterasi ke n","title":"Tugas 2"},{"location":"tugas2/#program-newton-raphson-pada-fungsi-non-linear","text":"","title":"Program Newton Raphson pada Fungsi Non Linear"},{"location":"tugas2/#newton-raphson","text":"Metode Newton-Raphson adalah metode pencarian akar suatu fungsi f(x) f(x) dengan pendekatan satu titik, dimana fungsi f(x) f(x) mempunyai turunan. Metode ini menggunakan pendekatan satu titik sebagai titik awal. Semakin dekat titik awal yang kita pilih dengan akar sebenarnya, maka semakin cepat konvergen ke akarnya. Diketahui fungsi f(x) f(x) dan turunannya \u0192'(x) \u0192'(x) , kita memulai dengan menentukan titik awal (x_0) (x_0) . x_1 = x_0 - \\frac{f(x_0)}{f'(x_0)} , x_2 = x_1 - \\frac{f(x_1)}{f'(x_1)}, ... , x_n = x_{n-1} - \\frac{f(x_{n-1})}{f'(x_{n-1})} x_1 = x_0 - \\frac{f(x_0)}{f'(x_0)} , x_2 = x_1 - \\frac{f(x_1)}{f'(x_1)}, ... , x_n = x_{n-1} - \\frac{f(x_{n-1})}{f'(x_{n-1})}","title":"Newton Raphson"},{"location":"tugas2/#menyusun-algoritma-dan-pemrograman-newton-rhapson","text":"dari rumus yang kita dapat diatas kita dapat menyusun sebuah algoritma yang nantinya akan dibuat menjadi sebuah program. Algoritma menyusun akar - akar f(x) = 0 f(x) = 0 sebagai berikut : Didefinisikan fungsi f f dengan f(x) f(x) dan f'(x) f'(x) Ditentukan Epsilon sebagai Toleransi kesalahan serta iterasi maksimum untuk Stopping Condition Dipilih tebakan awal x_0 x_0 Dihitung f( x_0 x_0 ) dan f'( x_0 x_0 ) Dihitung x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 . jika f'(x_0) = 0 f'(x_0) = 0 kembali ke langkah - 3 Jika \\left | x_b - x_0 \\right | < \\varepsilon \\left | x_b - x_0 \\right | < \\varepsilon . itersasi lebih dari iterasi maksimum tulis x_{hampiran} = x_b x_{hampiran} = x_b sebagai hasil hampiran akar; jika tidak, lanjutkan ke langkah berikutnya. Ganti nilai x_0 x_0 dengan x_0 = x_b x_0 = x_b dan kembali ke langkah-4","title":"Menyusun Algoritma dan Pemrograman Newton Rhapson"},{"location":"tugas2/#implementasi-pemrograman","text":"dari algoritma diatas , kita dapat menyusun sebuah program seperti berikut. import math e = 2.71828 def fungsi ( x ): x = float (( e ** x ) - ( 5 * x * x )) return x def fungsiturunan ( x ): x = float (( e ** x ) - ( 10 * x )) return x x = float ( input ( 'Masukkan nilai awal = ' )) error = float ( input ( 'Masukkan nilai error = ' )) perulangan = int ( input ( 'Masukkan maksimal pengulangan = ' )) iterasi = 0 selisih = error + 1 while iterasi <= perulangan and selisih > error : iterasi += 1 f_2 = x - ( fungsi ( x ) / fungsiturunan ( x )) selisih = math . fabs ( f_2 - x ) x = f_2 print ( \"Iterasi ke = \" , iterasi , \", x = \" , f_2 , \", f(\" , f_2 , \") = \" , fungsi ( f_2 ), \", selisih = \" , error ) if iterasi <= perulangan : print ( \"Perulangan Mencapai Batas Maksimal dengan hasil = \" , f_2 ) else : print ( \"Toleransi tidak terpenuhi\" ) Dengan Output sebagai berikut : Masukkan nilai awal = 1 Masukkan nilai error = 0.001 Masukkan maksimal pengulangan = 20 Iterasi ke = 1 , x = 0.6866509560927913 , f ( 0.6866509560927913 ) = - 0.3703989345253078 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.6866509560927913 Iterasi ke = 2 , x = 0.6107411479509417 , f ( 0.6107411479509417 ) = - 0.023228569301191326 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.6107411479509417 Iterasi ke = 3 , x = 0.605295611440254 , f ( 0.605295611440254 ) = - 0.00012100395601533087 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.605295611440254 Iterasi ke = 4 , x = 0.6052669454187432 , f ( 0.6052669454187432 ) = - 3.32076122155911e-09 , selisih = 0.001 Perulangan Mencapai Batas Maksimal dengan hasil = 0.6052669454187432 >>> Penjelasan : karena kita menggunakan contoh fungsi f(x) = e^x - 5x^2 f(x) = e^x - 5x^2 maka kita membuat sebuah fungsi yang sesuai , dan juga fungsi turunannya yaitu f'(x) = e^x - 10x f'(x) = e^x - 10x Membuat inputan untuk X , Error / Epsilon , serta Maksimal perulangan untuk stopping condition iterasi = 0 pada awal perulangan dan akan bertambah setiap kali melakukan perulangan. x_b - x_0 x_b - x_0 untuk perbandingan lakukan perulangan dengan kondisi iterasi kurang dari sama dengan inputan maksimal iterasi dan selisih lebih dari error / epsilon hitung x_b x_b dengan rumus x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 x_b = x_0 - \\frac{f(x_0)}{f'(x_0)}f'(x_0) \\neq 0 lalu lakukan perbandingan jika mencapai nilai True maka toleransi tidak terpenuhi namun perulangan sudah mencapai batas jika pengecekan selisih > error bernilai True maka toleransi akan terpenuhi dengan nilai error serta fungsi x pada iterasi ke n","title":"Implementasi Pemrograman"}]}